{"name":"Sweet-async-await","tagline":"Sweet.js macros to support the async/await ES7 proposed feature","body":"sweet-async-await\r\n=================\r\n\r\nSweet.js macros to support the async/await ES7 proposed feature\r\n\r\nhttps://github.com/lukehoban/ecmascript-asyncawait\r\n\r\n```javascript\r\nasync function findPosts() {\r\n  return $.get('/posts');\r\n}\r\n\r\nasync function main() {\r\n  var posts = await findPosts();\r\n  \r\n  posts.forEach(function (post) {\r\n    console.log(post);\r\n  });\r\n}\r\n\r\nmain();\r\n\r\n```\r\n\r\n#### Goals\r\nThe primary end-goal is to output the same human readable code you would use if this didn't exist, instead of using a state machine like the [traceur-compiler](https://github.com/google/traceur-compiler) does.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}